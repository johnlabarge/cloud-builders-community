# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in
# compliance with the License. You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distributed under the License
# is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
# implied. See the License for the specific language governing permissions and limitations under the
# License.

# This build script creates a base image builder that uses a GCE instance
# [similar to remote buidler](https://github.com/GoogleCloudPlatform/cloud-builders-community/tree/master/remote-builder).
# The base-image-builder requires some specific licenses be added for nested virtualization. This builder makes use of
# [packer](https://github.com/GoogleCloudPlatform/cloud-builders-community/packer) to build an agent image that will
# be used by the resulting builder to build GCP base images. That agent also has [packer](https://www.packer.io/) installed.
# The builder also adds the [packer builder](https://github.com/GoogleCloudPlatform/cloud-builders-community/packer) if it is not
# already part of the project's container registry.
#
# The resulting builder requires the following environmental settings: 
#  BUILD_NUMBER - added to resulting base image name
#  PROJECT_ID - used to store the image
#  TAG_NAME
#  IMAGE_ZONE where to build/upload the image
#  PACKER_SPEC the path to the Packer specification in the workspace

steps:
- id: 'clone_community_builders'
  name: 'gcr.io/cloud-builders/git'
  args: ['clone', 'https://github.com/GoogleCloudPlatform/cloud-builders-community']
- id: 'add_packer_builder'
  waitFor: ['clone_community_builders']
  name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: "bash"
  args:
    - '-c'
    - |
       PACKER_BUILDER_VERSION_STRING=$(gcloud container images list-tags gcr.io/$PROJECT_ID/packer --format='value(tags)' | grep latest )
       PACKER_BUILDER_VERSION=$(echo "$$PACKER_BUILDER_VERSION_STRING" | awk -F',' '{print $1}')
       if [ -z $$PACKER_BUILDER_VERSION ]; then
         cd cloud-builders-community/packer
         gcloud builds submit .
       else
          echo "Using packer version : $$PACKER_BUILDVERSION"
       fi
  #args: ['pwd' && 'cd', 'cloud-builders-community/packer', '&&', 'gcloud', 'builds', 'submit', '.']
- id: 'create_nested_virtualization_image'
  name: 'gcr.io/$PROJECT_ID/packer'
  entrypoint: bash
  waitFor: ['add_packer_builder']
  args:
    - '-c'
    - |
       cat <<NESTED_VIRT_SPEC>nested-virt-spec.json
       {
         "builders": [
        {
          "image_name": "nested-virtualization-centos-7",
          "type": "googlecompute",
          "project_id": "$PROJECT_ID",
          "source_image_family": "centos-7",
          "ssh_username": "packer",
          "zone": "${_IMAGE_ZONE}",
          "image_licenses": ["projects/vm-options/global/licenses/enable-vmx"]
        }
        ]
       }
       NESTED_VIRT_SPEC
       packer build -force nested-virt-spec.json
- id: create_packer_agent
  waitFor: 'create_nested_virtualization_image'
  name: 'gcr.io/$PROJECT_ID/packer'
  entrypoint: "bash"
  args:
    - '-c'
    - |
      echo '#!/bin/bash' > packer-install-script.sh
      cat <<PACKER_INSTALL>>packer-install-script.sh
      yum update -y && yum install git unzip wget qemu-kvm -y
      echo "export PATH=$_PATH:/usr/libexec" > /etc/profile.d/libexec-path.sh
      source /etc/profile.d/libexec-path.sh
      curl -LO \
      https://releases.hashicorp.com/packer/1.3.0/packer_1.3.0_linux_amd64.zip
      unzip packer_1.3.0_linux_amd64.zip
      cp packer /usr/bin/packerio
      PACKER_INSTALL
      cat <<AGENT_SPEC>agent-spec.json
        {
           "builders": [
            {
              "type": "googlecompute",
              "image_name": "packer-nested-virtualization-agent-${_AGENT_VERSION}",
              "image_family": "packer-nested-virtualization-agent",
              "project_id": "$PROJECT_ID",
              "source_image": "nested-virtualization-centos-7",
              "ssh_username": "packer",
              "zone": "${_IMAGE_ZONE}",
              "min_cpu_platform": "Intel Haswell",
              "startup_script_file": "packer-install-script.sh"
            }
          ]
         }
      AGENT_SPEC
      packer build -force agent-spec.json
- name: 'gcr.io/cloud-builders/docker'
  args: [ 'build', '-t', 'gcr.io/$PROJECT_ID/base-image-builder:latest', '.' ]
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/base-image-builder:latest']
- name: 'gcr.io/cloud-builders/docker'
  args: [ 'build', '-t', 'gcr.io/$PROJECT_ID/base-image-builder:latest', '.' ]
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/base-image-builder:latest']
images: ['gcr.io/$PROJECT_ID/base-image-builder:latest']
substitutions:
  _PATH: '\$PATH'
  _IMAGE_ZONE: 'us-central1-f'
  _AGENT_VERSION: 'v1'
